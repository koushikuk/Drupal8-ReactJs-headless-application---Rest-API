<?php
namespace  Drupal\studentapi\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;


class StudentAddForm extends FormBase {

    /**
     * Implement the student form
     */

    public function getFormId()
    {
        // TODO: Implement getFormId() method.
        return 'student_add_form';
    }

    /**
     * {@inheritdoc}
     */

    public function buildForm(array $form, FormStateInterface $form_state)
    {
        // TODO: Implement buildForm() method.

        $status = [0 => 'Inactive', 1 => 'Active'];
        $form['std_first_name'] = [
            '#title' => $this->t('First Name'),
            '#type' => 'textfield',
            '#size' => 60,
            '#maxlength' => 80,
            '#required' => true,
            '#default_value' => '',
        ];
        $form['std_last_name'] = [
            '#title' => $this->t('Last Name'),
            '#type' => 'textfield',
            '#size' => 60,
            '#maxlength' => 80,
            '#required' => true,
            '#default_value' => '',
        ];
        $form['std_mail'] = [
            '#title' => $this->t('Email Address'),
            '#type' => 'email',
            '#default_value' => '',
        ];
        //select options

        $programms = ['' => '--Select--','phd'=> 'PHD', 'mba'=> 'MBA', 'mca' => 'MCA', 'bca'=>'BCA', 'bba'=>'BBA', 'nsfr' => 'NSFR'];

        $form['program'] = [
            '#title' => $this->t(''),
            '#type' => 'select',
            '#required' => true,
            '#options' => $programms,
            '#default_value' => '',
        ];
        $form['active'] = [
            '#type' => 'radios',
            '#title' => t('Status'),
            '#default_value' => 1,
            '#options' => $status,
            '#description' => t('Shows whether a user status is active or not'),
        ];
        $form['save'] = [
            '#type' => 'submit',
            '#value' => $this->t("Submit"),
            '#description' => t('When a poll is closed, visitors can no longer vote for it.'),
        ];
        return $form;
    }

    public function validateForm(array &$form, FormStateInterface $form_state)
    {
        parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
    }


    public function submitForm(array &$form, FormStateInterface $form_state)
    {
       /**
        * Add student data in student_api table
        */
       $time_value = \Drupal::time()->getCurrentTime();
       $connection = \Drupal::database();
       $result = $connection -> insert('studentapi')
                 ->fields([
                     'std_first_name' => $form_state->getValue('std_first_name'),
                     'std_last_name' => $form_state->getValue('std_last_name'),
                     'std_mail' => $form_state->getValue('std_mail'),
                     'program' => $form_state->getValue('program'),
                     'active' => $form_state->getValue('active'),
                     'created' => $time_value
                    ] )
                 ->execute();
        //Redirect the form after submit
        $this->messenger()->addMessage($this->t("Record added successfully"));
        $url = Url::fromRoute('studentapi.addform');
        $form_state->setRedirectUrl($url);
    }
}